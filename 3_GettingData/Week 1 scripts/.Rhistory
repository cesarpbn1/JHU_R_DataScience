installed.packages("slidify")
install.packages("devtools")
library(devtools)
install_github('ramnathv/slidify')
## This is a markdown file
git inti
git init
cd
HelloWorld.md
## This is a markdown
## This is a markdown file
con <- gzfile("words.gz")
x <- readLines(con, 10)
packageVersion("swirl")
library(swirl)
ls()
rm(list = ls())
library(swirl)
install_from_swirl("R Programming")
install_from_swirl("R Programming")
corr <- function(specdata, threshold = 0) {
files_full <- list.files(specdata, full.names = TRUE)
dat <- vector(mode = "numeric", length = 0)
for (i in 1:length(files_full)) {
moni_i <- read.csv(files_full[i])
csum <- sum((!is.na(moni_i$sulfate)) & (!is.na(moni_i$nitrate)))
if (csum > threshold) {
tmp <- moni_i[which(!is.na(moni_i$sulfate)), ]
submoni_i <- tmp[which(!is.na(tmp$nitrate)), ]
dat <- c(dat, cor(submoni_i$sulfate, submoni_i$nitrate))
}
}
dat
}
corr
pollutant
setwd("~/Desktop/Coursera_Data_Science/R Studio/R Programming /ProgrammingAssignment3")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
nrow(outcome)
names(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv")
## Check that outcome is valid
if (!((outcome == "heart attack") | (outcome == "heart failure")
| (outcome == "pneumonia"))) {
stop ("invalid outcome")
}
## For each state, find the hospital of the given rank
col <- if (outcome == "heart attack") {
11
} else if (outcome == "heart failure") {
17
} else {
23
}
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
# Generate an empty vector that will be filled later, row by row, to
# generate the final output.
output <- vector()
states <- levels(data[, 7])
for(i in 1:length(states)) {
statedata <- data[grep(states[i], data$State), ]
orderdata <- statedata[order(statedata[, col], statedata[, 2],
na.last = NA), ]
hospital <- if(num == "best") {
orderdata[1, 2]
} else if(num == "worst") {
orderdata[nrow(orderdata), 2]
} else{
orderdata[num, 2]
}
output <- append(output, c(hospital, states[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(states), 2, byrow = TRUE))
colnames(output) <- c("hospital", "state")
rownames(output) <- states
output
}
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
setwd("/Users/cesar/Desktop/")
getwd()
if (!files.exists("poopoo")) {
dir.create("mazel")
}
if (!files.exists("poopoo"))
if (!files.exists("poopoo"))
dir.create("fecal")
if (!file.exists("poopoo")) {
dir.create("mazel")
}
setwd("/Users/cesar/Desktop/Coursera_Data_Science/")
getwd()
if (!file.exists("Course 3")) {
dir.create("Course 3")
}
setwd("/Users/cesar/Desktop/Coursera_Data_Science/Course 3")
getwd()
if (!file.exists("Week 1 scripts")) {
dir.create("Week 1 scripts")
}
getwd()
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD "
download.file(fileUrl, destfile = "./data/cameras.csv", method = "curl")
list.files("./data")
download.file(fileUrl, destfile = "./Week 1 scripts/cameras.csv", method = "curl")
list.files("./Week 1 scripts")
dateDowloaded <- date(fileUrl)
dateDowloaded <- date()
dateDowloaded <- date()
dataDownloaded
dateDownloaded <- date()
dateDownloaded
dateDownloaded <- date(fileUrl)
dateDownloaded
setwd("~/Desktop/Coursera_Data_Science/Course 3/Week 1 scripts")
twd()
setwd("/Users/cesar/Desktop/Coursera_Data_Science/Course 3/Week 1 scripts")
getwd()
