installed.packages("slidify")
install.packages("devtools")
library(devtools)
install_github('ramnathv/slidify')
## This is a markdown file
git inti
git init
cd
HelloWorld.md
## This is a markdown
## This is a markdown file
con <- gzfile("words.gz")
x <- readLines(con, 10)
packageVersion("swirl")
library(swirl)
ls()
rm(list = ls())
library(swirl)
install_from_swirl("R Programming")
install_from_swirl("R Programming")
corr <- function(specdata, threshold = 0) {
files_full <- list.files(specdata, full.names = TRUE)
dat <- vector(mode = "numeric", length = 0)
for (i in 1:length(files_full)) {
moni_i <- read.csv(files_full[i])
csum <- sum((!is.na(moni_i$sulfate)) & (!is.na(moni_i$nitrate)))
if (csum > threshold) {
tmp <- moni_i[which(!is.na(moni_i$sulfate)), ]
submoni_i <- tmp[which(!is.na(tmp$nitrate)), ]
dat <- c(dat, cor(submoni_i$sulfate, submoni_i$nitrate))
}
}
dat
}
corr
pollutant
install.packages("RMySQL")
install.packages("RMySQL")
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.ucsc.edu")
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases:")l dbDisconnect(ucscDb);
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases:")l dbDisconnect(ucscDb);
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases:")l dbDisconnect(ucscDb);
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases:")l dbDisconnect(ucscDb);
library(jpeg)
library(swirl)
swirl()
library(pollution)
head(pollution)
library(jpeg)
library(swirl)
swirl()
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
rug(ppm)
rug
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
hist(ppm, col = "green")
abline(v = 12, lwd=2)
abline(v = median(ppm), lwd=2, col = "magenta")
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties
| in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(data = pollution, col = "red")
boxplot(data = "pollution", col = "red")
boxplotpm25~region = "pollution", col = "red")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution,region=="east")
east
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution,region=="west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
bline(h = 12, lwd = 2, lty = 2)
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution,region=="west")
plot(west$latitude, west$pm25, main = "West")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
setwd("~/Desktop/Coursera_Data_Science/Course 4/Week 1 scripts")
pdf(file="myplot.pdf")
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
library(lattice)
xyplot(y ~ x | f * g, data)
xyplot(Ozone ~ Wind, data = airquality)
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
p <-xyplot(Ozone ~Wind, data = airquality)
print(p)
xyplot(Ozone ~Wind, data = airquality)
xyplot(Ozone ~Wind, data = airquality)
print(p)
