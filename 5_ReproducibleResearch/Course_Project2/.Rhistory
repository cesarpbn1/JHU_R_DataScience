library(ggplot2)
injuryplot<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", fill = I("green")) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle("Weather Event by Injuries")
library(ggplot2)
fatalplot<-qplot(EVTYPE, data = fatalities, weight = FATALITIES, geom = "bar", binwidth = 1, fill = I("purple")) +
xlim("TORNADO","EXCESSIVE HEAT","FLASH FLOOD","HEAT","LIGHTNING", "TSTM    WIND","FLOOD","RIP CURRENT","HIGH WIND","AVALANCHE")+
scale_y_continuous("Fatalities") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle("Weather Events by Fatalities")
allfatalities<-aggregate(FATALITIES~EVTYPE, data = substorm, "sum")
fatalities<-allfatalities[order(-allfatalities$FATALITIES), ][1:10, ]
fatalities
library(ggplot2)
fatalplot<-qplot(EVTYPE, data = fatalities, weight = FATALITIES, geom = "bar", binwidth = 1, fill = I("purple")) +
xlim("TORNADO","EXCESSIVE HEAT","FLASH FLOOD","HEAT","LIGHTNING", "TSTM    WIND","FLOOD","RIP CURRENT","HIGH WIND","AVALANCHE")+
scale_y_continuous("Fatalities") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle("Weather Events by Fatalities")
allfatalities<-aggregate(FATALITIES~EVTYPE, data = substorm, "sum")
fatalities<-allfatalities[order(-allfatalities$FATALITIES), ][1:10, ]
fatalities
library(ggplot2)
fatalplot<-qplot(EVTYPE, data = fatalities, weight = FATALITIES, geom = "bar", fill = I("purple")) +
xlim("TORNADO","EXCESSIVE HEAT","FLASH FLOOD","HEAT","LIGHTNING", "TSTM    WIND","FLOOD","RIP CURRENT","HIGH WIND","AVALANCHE")+
scale_y_continuous("Fatalities") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle("Weather Events by Fatalities")
library(ggplot2)
fatalplot<-qplot(EVTYPE, data = fatalities, weight = FATALITIES, geom = "bar", fill = I("purple")) +
xlim("TORNADO","EXCESSIVE HEAT","FLASH FLOOD","HEAT","LIGHTNING", "TSTM    WIND","FLOOD","RIP CURRENT","HIGH WIND","AVALANCHE")+
scale_y_continuous("Fatalities") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle("Weather Events by Fatalities")
library(ggplot2)
injuryplot<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", fill = I("green")) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle("Weather Event by Injuries")
allinjuries<-aggregate(INJURIES~EVTYPE, data = substorm, "sum")
injuries<-allinjuries[order(-allinjuries$INJURIES), ][1:10, ]
injuries
library(ggplot2)
injuryplot<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", fill = I("green")) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle("Weather Event by Injuries")
##ggplot2 aka grammar of graphics plot
## is a hybrid of the base & lattice systems
install.packages("ggplot2")
library("ggplot2")
##example data set
str(mpg)
##LETS LOOK AT QPLOT
## function belows follows:
## qplot(x coordinate, y coordinate, data = dataframe)
qplot(displ, hwy, data = mpg)
##Modifying Aesthetics
##command color = drv changes color automcatically
## to different
qplot(displ, hwy, data = mpg, color = drv)
##Adding a geom aka statisitc
## geom = "point" gives you points and "smooth" gives you a
## a curved line of mean
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
##Adding a histogram on qplot
## for adding a hist only sepficy the x and ommit the displ argument
qplot(hwy, data = mpg, fill= drv)
##command "facets" provides panels in this lattice system
## where you can create different subsets or graphs of data
qplot(displ, hwy, data = mpg, facets =.~drv)
##command bindwidth splits out the substes into three
##scatterplots.  careful changing the parameters
## for "facets" and elimating displ
## " ~ " deals with columns
qplot(hwy, data = mpg, facets = drv~., binwidth= 2)
install.packages("ggplot2")
##ggplot2 aka grammar of graphics plot
## is a hybrid of the base & lattice systems
install.packages("ggplot2")
library("ggplot2")
##example data set
str(mpg)
##LETS LOOK AT QPLOT
## function belows follows:
## qplot(x coordinate, y coordinate, data = dataframe)
qplot(displ, hwy, data = mpg)
##Modifying Aesthetics
##command color = drv changes color automcatically
## to different
qplot(displ, hwy, data = mpg, color = drv)
##Adding a geom aka statisitc
## geom = "point" gives you points and "smooth" gives you a
## a curved line of mean
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
##Adding a histogram on qplot
## for adding a hist only sepficy the x and ommit the displ argument
qplot(hwy, data = mpg, fill= drv)
##command "facets" provides panels in this lattice system
## where you can create different subsets or graphs of data
qplot(displ, hwy, data = mpg, facets =.~drv)
##command bindwidth splits out the substes into three
##scatterplots.  careful changing the parameters
## for "facets" and elimating displ
## " ~ " deals with columns
qplot(hwy, data = mpg, facets = drv~., binwidth= 2)
install.packages("ggplot2")
##Modifying Aesthetics
##command color = drv changes color automcatically
## to different
qplot(displ, hwy, data = mpg, color = drv)
## a curved line of mean
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
qplot(hwy, data = mpg, fill= drv)
qplot(hwy, data = mpg, fill= drv)
qplot(displ, hwy, data = mpg, facets =.~drv)
qplot(hwy, data = mpg, facets = drv~., binwidth= 2)
allinjuries<-aggregate(INJURIES~EVTYPE, data = substorm, "sum")
injuries<-allinjuries[order(-allinjuries$INJURIES), ][1:10, ]
injuries
library(ggplot2)
injuryplot<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", binwidth= 1, fill = green) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle ("Weather Event by Injuries")
library(ggplot2)
injuryplot<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", fill = green) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle ("Weather Event by Injuries")
library("ggplot2")
##example data set
str(mpg)
##LETS LOOK AT QPLOT
## function belows follows:
## qplot(x coordinate, y coordinate, data = dataframe)
qplot(displ, hwy, data = mpg)
##Modifying Aesthetics
##command color = drv changes color automcatically
## to different
qplot(displ, hwy, data = mpg, color = drv)
##Adding a geom aka statisitc
## geom = "point" gives you points and "smooth" gives you a
## a curved line of mean
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
##Adding a histogram on qplot
## for adding a hist only sepficy the x and ommit the displ argument
qplot(hwy, data = mpg, fill= drv)
##command "facets" provides panels in this lattice system
## where you can create different subsets or graphs of data
qplot(displ, hwy, data = mpg, facets =.~drv)
##command bindwidth splits out the substes into three
##scatterplots.  careful changing the parameters
## for "facets" and elimating displ
## " ~ " deals with columns
qplot(hwy, data = mpg, facets = drv~., binwidth= 2)
library("ggplot2"")
injuryplot<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", fill = green) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle ("Weather Event by Injuries")
allinjuries<-aggregate(INJURIES~EVTYPE, data = substorm, "sum")
injuries<-allinjuries[order(-allinjuries$INJURIES), ][1:10, ]
injuries
library("ggplot2"")
injuryplot<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", fill = green) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle ("Weather Event by Injuries")
library(ggplot2)
injuryplot<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", fill = green) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle ("Weather Event by Injuries")
setwd("~/Desktop/Course_Project2")
library(ggplot2)
library(plyr)
library(gridExtra)
library(knitr)
sessionInfo()
stormData <- read.csv(bzfile('StormData.csv.bz2'),header=TRUE, stringsAsFactors = FALSE)
col<-c("EVTYPE","BGN_DATE","FATALITIES","INJURIES","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
substorm<-stormData[col]
cleanstorm<-unique(substorm$EVTYPE)
unique(substorm$PROPDMGEXP)
unique(substorm$CROPDMGEXP)
substorm$CROPex<-substorm$CROPDMGEXP
substorm$CROPex <- revalue(substorm$CROPex, c("K"="3","k"="3", "M"="6","m"="6","B"="9","?"="0"))
substorm$CROPex[substorm$CROPex==""]<-"0"
substorm$CROPex<-as.numeric(substorm$CROPex)
substorm$TOTALPROPDMG <- substorm$PROPDMG * (10^substorm$PROPex)
substorm$TOTALCROPDMG <- substorm$CROPDMG * (10^substorm$CROPex)
allinjuries<-aggregate(INJURIES~EVTYPE, data = substorm, "sum")
injuries<-allinjuries[order(-allinjuries$INJURIES), ][1:10, ]
injuries
library(ggplot2)
injuryplot<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", fill = green) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle ("Weather Event by Injuries")
allfatalities<-aggregate(FATALITIES~EVTYPE, data = substorm, "sum")
fatalities<-allfatalities[order(-allfatalities$FATALITIES), ][1:10, ]
fatalities
library(ggplot2)
fatalplot<-qplot(EVTYPE, data = fatalities, weight = FATALITIES, geom = "bar", fill =I("purple")) +
xlim("TORNADO","EXCESSIVE HEAT","FLASH FLOOD","HEAT","LIGHTNING", "TSTM    WIND","FLOOD","RIP CURRENT","HIGH WIND","AVALANCHE")+
scale_y_continuous("Fatalities") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle("Weather Events by Fatalities")
agrfatalities<-aggregate(FATALITIES~EVTYPE, data = substorm, "sum")
fatalities<-agrfatalities[order(-agrfatalities$FATALITIES), ][1:10, ]
fatalities
agrinjuries<-aggregate(INJURIES~EVTYPE, data = substorm, "sum")
injuries<-agrinjuries[order(-agrinjuries$INJURIES), ][1:10, ]
injuries
library(ggplot2)
library(gridExtra)
# First plot
plotfatalities<-qplot(EVTYPE, data = fatalities, weight = FATALITIES, geom = "bar", binwidth = 1, fill = I("blue")) +
xlim("TORNADO","EXCESSIVE HEAT","FLASH FLOOD","HEAT","LIGHTNING", "TSTM WIND","FLOOD","RIP CURRENT","HIGH WIND","AVALANCHE")+
scale_y_continuous("Number of Fatalities") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by fatalities")
# Second plot
plotinjuries<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", binwidth = 1, fill = I("red")) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Number of injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by injuries")
grid.arrange(plotfatalities, plotinjuries, ncol = 2)
library(ggplot2)
library(gridExtra)
# First plot
plotfatalities<-qplot(EVTYPE, data = fatalities, weight = FATALITIES, geom = "bar", fill = I("blue")) +
xlim("TORNADO","EXCESSIVE HEAT","FLASH FLOOD","HEAT","LIGHTNING", "TSTM WIND","FLOOD","RIP CURRENT","HIGH WIND","AVALANCHE")+
scale_y_continuous("Number of Fatalities") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by fatalities")
# Second plot
plotinjuries<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", fill = I("red")) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Number of injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by injuries")
grid.arrange(plotfatalities, plotinjuries, ncol = 2)
library(ggplot2)
library(gridExtra)
# First plot
plotfatalities<-qplot(EVTYPE, data = fatalities, weight = FATALITIES, geom = "bar", fill = I("green")) +
xlim("TORNADO","EXCESSIVE HEAT","FLASH FLOOD","HEAT","LIGHTNING", "TSTM WIND","FLOOD","RIP CURRENT","HIGH WIND","AVALANCHE")+
scale_y_continuous("Number of Fatalities") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by fatalities")
# Second plot
plotinjuries<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", fill = I("purple")) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Number of injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by injuries")
grid.arrange(plotfatalities, plotinjuries, ncol = 2)
allfatalities<-aggregate(FATALITIES~EVTYPE, data = substorm, "sum")
fatalities<-allfatalities[order(-allfatalities$FATALITIES), ][1:10, ]
fatalities
allinjuries<-aggregate (INJURIES~EVTYPE, data = substorm, "sum")
injuries<-allinjuries[order(-allinjuries$INJURIES), ][1:10, ]
injuries
library(ggplot2)
library(gridExtra)
# First plot
plotfatalities<-qplot(EVTYPE, data = fatalities, weight = FATALITIES, geom = "bar", fill = I("green")) +
xlim("TORNADO","EXCESSIVE HEAT","FLASH FLOOD","HEAT","LIGHTNING", "TSTM WIND","FLOOD","RIP CURRENT","HIGH WIND","AVALANCHE")+
scale_y_continuous("Number of Fatalities") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by fatalities")
# Second plot
plotinjuries<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", fill = I("purple")) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Number of injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by injuries")
grid.arrange(plotfatalities, plotinjuries, ncol = 2)
library(ggplot2)
library(gridExtra)
# First plot
plotfatalities<-qplot(EVTYPE, data = fatalities, weight = FATALITIES, geom = "bar", fill = I("green")) +
xlim("TORNADO","EXCESSIVE HEAT","FLASH FLOOD","HEAT","LIGHTNING", "TSTM WIND","FLOOD","RIP CURRENT","HIGH WIND","AVALANCHE")+
scale_y_continuous("Fatalities") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle("Weather Events by Fatalities")
# Second plot
plotinjuries<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", fill = I("purple")) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Number of injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle("Weather Events by Injuries")
grid.arrange(plotfatalities, plotinjuries, ncol = 2)
library(ggplot2)
library(gridExtra)
# First plot
plotfatalities<-qplot(EVTYPE, data = fatalities, weight = FATALITIES, geom = "bar", fill = I("green")) +
xlim("TORNADO","EXCESSIVE HEAT","FLASH FLOOD","HEAT","LIGHTNING", "TSTM WIND","FLOOD","RIP CURRENT","HIGH WIND","AVALANCHE")+
scale_y_continuous("Fatalities") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Events") +
ggtitle("Weather Events by Fatalities")
# Second plot
plotinjuries<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", fill = I("purple")) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Number of injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Events") +
ggtitle("Weather Events by Injuries")
library(ggplot2)
library(gridExtra)
# First plot
plotfatalities<-qplot(EVTYPE, data = fatalities, weight = FATALITIES, geom = "bar", fill = I("green")) +
xlim("TORNADO","EXCESSIVE HEAT","FLASH FLOOD","HEAT","LIGHTNING", "TSTM WIND","FLOOD","RIP CURRENT","HIGH WIND","AVALANCHE")+
scale_y_continuous("Fatalities") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Events") +
ggtitle("Weather Events by Fatalities")
# Second plot
plotinjuries<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", fill = I("purple")) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Number of injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Events") +
ggtitle("Weather Events by Injuries")
grid.arrange(plotfatalities, plotinjuries, ncol = 2)
allfatalities<-aggregate(FATALITIES~EVTYPE, data = substorm, "sum")
fatalities<-allfatalities[order(-allfatalities$FATALITIES), ][1:10, ]
fatalities
allinjuries<-aggregate (INJURIES~EVTYPE, data = substorm, "sum")
injuries<-allinjuries[order(-allinjuries$INJURIES), ][1:10, ]
injuries
library(ggplot2)
library(gridExtra)
# Fatality plot
plotfatalities<-qplot(EVTYPE, data = fatalities, weight = FATALITIES, geom = "bar", fill = I("green")) +
xlim("TORNADO","EXCESSIVE HEAT","FLASH FLOOD","HEAT","LIGHTNING", "TSTM WIND","FLOOD","RIP CURRENT","HIGH WIND","AVALANCHE")+
scale_y_continuous("Fatalities") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Events") +
ggtitle("Weather Events by Fatalities")
# Injury plot
plotinjuries<-qplot(EVTYPE, data = injuries, weight = INJURIES, geom = "bar", fill = I("purple")) +
xlim("TORNADO","TSTM WIND","FLOOD","EXCESSIVE HEAT","LIGHTNING", "HEAT","ICE STORM","FLASH FLOOD","THUNDERSTORM WIND","HAIL")+
scale_y_continuous("Number of injuries") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Events") +
ggtitle("Weather Events by Injuries")
grid.arrange(plotfatalities, plotinjuries, ncol = 2)
agrproperties<-aggregate(TOTALPROPDMG~EVTYPE, data = substormData, "sum")
properties<-agrproperties[order(-agrproperties$TOTALPROPDMG), ][1:10, ]
properties
agrproperties<-aggregate(TOTALPROPDMG~EVTYPE, data = substorm, "sum")
properties<-agrproperties[order(-agrproperties$TOTALPROPDMG), ][1:10, ]
properties
col<-c("EVTYPE","BGN_DATE","FATALITIES","INJURIES","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
substorm<-stormData[col]
cleanstorm<-unique(substorm$EVTYPE)
unique(substorm$PROPDMGEXP)
library(plyr)
substorm$PROPex<-substorm$PROPDMGEXP
substorm$PROPex <- revalue(substorm$PROPex, c("K"="3", "M"="6","m"="6","B"="9","+"="0","h"="2","H"="2","-"="0","?"="0"))
substorm$PROPex[substorm$PROPex==""]<-"0"
substorm$PROPex<-as.numeric(substorm$PROPex)
unique(substorm$CROPDMGEXP)
substorm$CROPex<-substorm$CROPDMGEXP
substorm$CROPex <- revalue(substorm$CROPex, c("K"="3","k"="3", "M"="6","m"="6","B"="9","?"="0"))
substorm$CROPex[substorm$CROPex==""]<-"0"
substorm$CROPex<-as.numeric(substorm$CROPex)
substorm$TOTALPROPDMG <- substorm$PROPDMG * (10^substorm$PROPex)
substorm$TOTALCROPDMG <- substorm$CROPDMG * (10^substorm$CROPex)
agrproperties<-aggregate(TOTALPROPDMG~EVTYPE, data = substorm, "sum")
properties<-agrproperties[order(-agrproperties$TOTALPROPDMG), ][1:10, ]
properties
allproperties<-aggregate(TOTALPROPDMG~EVTYPE, data = substorm, "sum")
properties<-allproperties[order(-allproperties$TOTALPROPDMG), ][1:10, ]
properties
allcrops<-aggregate(TOTALCROPDMG~EVTYPE, data = substorm, "sum")
crops<-allcrop[order(-allcrops$TOTALCROPDMG), ][1:10, ]
crops
allcrops<-aggregate(TOTALCROPDMG~EVTYPE, data = substorm, "sum")
crop<-allcrop[order(-allcrop$TOTALCROPDMG), ][1:10, ]
crop
allcrops<-aggregate(TOTALCROPDMG~EVTYPE, data = substorm, "sum")
crops<-allcrops[order(-allcrops$TOTALCROPDMG), ][1:10, ]
crops
plotproperties<-qplot(EVTYPE, data = properties, weight = TOTALPROPDMG, geom = "bar", binwidth = 1, fill = I("blue")) +
xlim("FLOOD","HURRICANE/TYPHOON","TORNADO","STORM SURGE","FLASH FLOOD","HAIL","HURRICANE","TROPICAL STORM","WINTER STORM","HIGH WIND")+
scale_y_continuous("Prop. Damage") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by property damage")
# Second plot
plotcrop<-qplot(EVTYPE, data = crop, weight = TOTALCROPDMG, geom = "bar", binwidth = 1, fill = I("red")) +
xlim("DROUGHT","FLOOD","RIVER FLOOD","ICE STORM","HAIL","HURRICANE","HURRICANE/TYPHOON","FLASH FLOOD","EXTREME COLD","FROST/FREEZE")+
scale_y_continuous("Prop. Crop") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by crop damage")
grid.arrange(plotproperties, plotcrop, ncol = 2)
plotproperties<-qplot(EVTYPE, data = properties, weight = TOTALPROPDMG, geom = "bar", fill = I("blue")) +
xlim("FLOOD","HURRICANE/TYPHOON","TORNADO","STORM SURGE","FLASH FLOOD","HAIL","HURRICANE","TROPICAL STORM","WINTER STORM","HIGH WIND")+
scale_y_continuous("Prop. Damage") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by property damage")
# Second plot
plotcrops<-qplot(EVTYPE, data = crops, weight = TOTALCROPDMG, geom = "bar", fill = I("red")) +
xlim("DROUGHT","FLOOD","RIVER FLOOD","ICE STORM","HAIL","HURRICANE","HURRICANE/TYPHOON","FLASH FLOOD","EXTREME COLD","FROST/FREEZE")+
scale_y_continuous("Prop. Crop") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by crop damage")
grid.arrange(plotproperties, plotcrop, ncol = 2)
plotproperties<-qplot(EVTYPE, data = properties, weight = TOTALPROPDMG, geom = "bar", fill = I("blue")) +
xlim("FLOOD","HURRICANE/TYPHOON","TORNADO","STORM SURGE","FLASH FLOOD","HAIL","HURRICANE","TROPICAL STORM","WINTER STORM","HIGH WIND")+
scale_y_continuous("Prop. Damage") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by property damage")
# Second plot
plotcrops<-qplot(EVTYPE, data = crops, weight = TOTALCROPDMG, geom = "bar", fill = I("red")) +
xlim("DROUGHT","FLOOD","RIVER FLOOD","ICE STORM","HAIL","HURRICANE","HURRICANE/TYPHOON","FLASH FLOOD","EXTREME COLD","FROST/FREEZE")+
scale_y_continuous("Prop. Crop") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by crop damage")
grid.arrange(plotproperties, plotcrops, ncol = 2)
plotproperties<-qplot(EVTYPE, data = properties, weight = TOTALPROPDMG, geom = "bar", fill = I("blue")) +
xlim("FLOOD","HURRICANE/TYPHOON","TORNADO","STORM SURGE","FLASH FLOOD","HAIL","HURRICANE","TROPICAL STORM","WINTER STORM","HIGH WIND")+
scale_y_continuous("Prop. Damage") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by property damage")
# Second plot
plotcrops<-qplot(EVTYPE, data = crops, weight = TOTALCROPDMG, geom = "bar", fill = I("orange")) +
xlim("DROUGHT","FLOOD","RIVER FLOOD","ICE STORM","HAIL","HURRICANE","HURRICANE/TYPHOON","FLASH FLOOD","EXTREME COLD","FROST/FREEZE")+
scale_y_continuous("Prop. Crop") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by crop damage")
grid.arrange(plotproperties, plotcrops, ncol = 2)
plotproperties<-qplot(EVTYPE, data = properties, weight = TOTALPROPDMG, geom = "bar", fill = I("pink")) +
xlim("FLOOD","HURRICANE/TYPHOON","TORNADO","STORM SURGE","FLASH FLOOD","HAIL","HURRICANE","TROPICAL STORM","WINTER STORM","HIGH WIND")+
scale_y_continuous("Prop. Damage") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by property damage")
# Second plot
plotcrops<-qplot(EVTYPE, data = crops, weight = TOTALCROPDMG, geom = "bar", fill = I("orange")) +
xlim("DROUGHT","FLOOD","RIVER FLOOD","ICE STORM","HAIL","HURRICANE","HURRICANE/TYPHOON","FLASH FLOOD","EXTREME COLD","FROST/FREEZE")+
scale_y_continuous("Prop. Crop") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Type") +
ggtitle("The top 10 weather events\n by crop damage")
grid.arrange(plotproperties, plotcrops, ncol = 2)
ggtitle("Weather Events by Crop damage")
allproperties<-aggregate(TOTALPROPDMG~EVTYPE, data = substorm, "sum")
properties<-allproperties[order(-allproperties$TOTALPROPDMG), ][1:10, ]
properties
#plot of properties damage
plotproperties<-qplot(EVTYPE, data = properties, weight = TOTALPROPDMG, geom = "bar", fill = I("pink")) +
xlim("FLOOD","HURRICANE/TYPHOON","TORNADO","STORM SURGE","FLASH FLOOD","HAIL","HURRICANE","TROPICAL STORM","WINTER STORM","HIGH WIND")+
scale_y_continuous("Prop. Damage") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle("Weather Events by Property Damage")
# plot of crop damage
plotcrops<-qplot(EVTYPE, data = crops, weight = TOTALCROPDMG, geom = "bar", fill = I("orange")) +
xlim("DROUGHT","FLOOD","RIVER FLOOD","ICE STORM","HAIL","HURRICANE","HURRICANE/TYPHOON","FLASH FLOOD","EXTREME COLD","FROST/FREEZE")+
scale_y_continuous("Prop. Crop") +
theme(axis.text.x = element_text(angle = 45,
hjust = 1)) + xlab("Weather Event") +
ggtitle("Weather Events by Crop damage")
grid.arrange(plotproperties, plotcrops, ncol = 2)
